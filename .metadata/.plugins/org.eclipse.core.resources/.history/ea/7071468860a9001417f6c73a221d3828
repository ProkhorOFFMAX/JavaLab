package ru.spbstu.telematics.Prokhorov.lab2;

import java.util.Iterator;

public class MyArrayQueue<T> 
				implements IArrayQueue, Iterable<T>
{
	int CAPACITI_QUEUE_ARRAY;
	T[] QuArData;
	int QuArEnd;
	int QuArBegin;
	int size_;
	
	
	public  MyArrayQueue(){
		CAPACITI_QUEUE_ARRAY=8;
		QuArData = (T[]) new Object[CAPACITI_QUEUE_ARRAY];
		QuArEnd=0;
		QuArBegin=0;
		size_=0;
	}


	@Override
	public void add(Object o) {
		if((size_+1)>CAPACITI_QUEUE_ARRAY)
			
		QuArData[QuArEnd]= (T) o;
		QuArEnd=(QuArEnd+1)%CAPACITI_QUEUE_ARRAY;
		size_++;
	}


	@Override
	public Object get() {
		if(size_==0)
			return null;
		T temp=QuArData[QuArBegin];
		QuArBegin=(QuArBegin+1)%CAPACITI_QUEUE_ARRAY;
		size_--;
		return temp;
	}


	@Override
	public int size() {
		return size_;
	}

	public void expansionQuAr(){
		
	}

	@Override
	public void rotate(int posNum) {
		posNum=posNum % CAPACITI_QUEUE_ARRAY; //Устранение лишних прогонов
		for (int i=0; i<CAPACITI_QUEUE_ARRAY; i++){
			T temp=QuArData[CAPACITI_QUEUE_ARRAY-1];
			for (int j=CAPACITI_QUEUE_ARRAY-1; j > 0; --j)
				QuArData[j]=QuArData[j-1];
			QuArData[0]=temp;
			}
	}
	
	@Override
	public Iterator<T> iterator() {
		// TODO Auto-generated method stub
		return null;
	}
}
